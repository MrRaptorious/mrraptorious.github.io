import"../chunks/CWj6FrbW.js";import"../chunks/Be5dWuTk.js";import{p as _e,a8 as re,a9 as ge,d as ve,t as he,g as e,a as pe,e as ye,s as r,j as o,i as s,m as c,r as i,n as we,aa as ne}from"../chunks/CKsiWAQM.js";import{o as Fe}from"../chunks/CbPKOLcE.js";import{e as se,s as R}from"../chunks/n36DDGjf.js";import{r as _}from"../chunks/B_D1S_Ip.js";import{b as y,a as ke,_ as Ae,s as Te,c as Ce,u as Re,r as Pe,e as je}from"../chunks/B8vUEQ8S.js";import{b as Se}from"../chunks/BjcL27rt.js";import{i as Me}from"../chunks/DRl7fnVc.js";var Ie=ve('<div class="flex flex-col lg:flex-col flex-grow gap-6"><div class="flex flex-col lg:flex-row flex-grow gap-6"><div class="lg:w-1/3 p-6 rounded-lg shadow-md flex flex-col space-y-4"><div class="flex flex-col space-y-2"><div class="flex flex-row justify-between space-y-2"><label for="rd_num_agents" class="text-subtext0 font-medium">Num Agents</label> <p> </p></div> <input type="range" id="rd_num_agents" min="2" max="100" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_min_speed" class="text-subtext0 font-medium">Min Speed</label> <input type="range" id="rd_min_speed" min="1" max="25" step="0.1" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_max_speed" class="text-subtext0 font-medium">Max Speed</label> <input type="range" id="rd_max_speed" min="1" max="25" step="0.1" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><div class="flex flex-row justify-between space-y-2"><label for="rd_max_speed" class="text-subtext0 font-medium">Pause time</label> <p> </p></div> <input type="range" id="rd_max_speed" min="0" max="100" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_speed" class="text-subtext0 font-medium">Range</label> <input type="range" id="rd_radius" min="0" max="1000" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_speed" class="text-subtext0 font-medium">Trace</label> <input type="checkbox" id="rd_trace" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <button> </button></div> <div class="lg:w-2/3 p-6 rounded-lg shadow-md flex flex-col"><canvas id="myCanvas" class="w-full h-[500px] border border-overlay1 rounded-md"></canvas></div></div> <br/></div>');function $e(U,P){_e(P,!1);let a=c(null),b=c(20),f=c(5),x=c(8),g=c(50),S=c(50),w=null,h=c(!1),u=c(!1),m=c(!1),M=[],F=c(V);function B(){if(e(a)){const t=e(a).getBoundingClientRect();ne(a,e(a).width=t.width),ne(a,e(a).height=t.height)}}function de(t){if(!e(a))return;const n=e(a).getContext("2d");if(n){n.strokeStyle="#14b8a6",n.lineWidth=2,console.log(t.length),console.log(M.length);for(let v=0;v<t.length;v++){const p=M[v],A=t[v];!p||!A||(n.beginPath(),n.moveTo(p.x,p.y),n.lineTo(A.x,A.y),n.stroke())}M=t}}function V(t){if(!e(a))return;const n=e(a).getContext("2d");n&&(n.clearRect(0,0,e(a).width,e(a).height),fe(n,t[0],t),ce(n,t))}function ce(t,n,v=8){t.fillStyle="#000000";for(const p of n)t.beginPath(),t.arc(p.x,p.y,v,0,Math.PI*2),t.fill()}function fe(t,n,v){t.fillStyle="#0000000F",t.strokeStyle="#FFFFFF00",t.beginPath(),t.arc(n.x,n.y,e(S),0,Math.PI*2),t.fill(),t.stroke(),t.strokeStyle="#FFFFFFFF";for(const p of v){let A=n.x-p.x,ie=n.y-p.y,l=Math.sqrt(A*A+ie*ie);l<e(S)&&l!=0&&(t.moveTo(n.x,n.y),t.lineTo(p.x,p.y))}t.stroke()}async function ue(){if(!e(u)){if(!e(a))return;B(),Ce(e(b),e(a).width,e(a).height,e(f),e(x),e(g)),s(u,!0)}if(s(h,!e(h)),e(h)){let t=function(){const n=Re(e(f),e(x),e(g));e(F)(n),w=requestAnimationFrame(t)};w&&cancelAnimationFrame(w),t()}else w&&cancelAnimationFrame(w)}Fe(async()=>{await Ae(),B(),window.addEventListener("resize",B)}),re(()=>(e(f),e(x)),()=>{e(f)>e(x)&&s(x,e(f))}),re(()=>(e(a),e(m)),()=>{if(e(a)){const t=e(a).getContext("2d");t&&t.clearRect(0,0,e(a).width,e(a).height)}e(m)?s(F,de):s(F,V)}),ge(),Me();var j=Ie(),X=o(j),I=o(X),$=o(I),q=o($),Y=r(o(q),2),me=o(Y,!0);i(Y),i(q);var k=r(q,2);_(k),i($);var z=r($,2),D=r(o(z),2);_(D),i(z);var E=r(z,2),ee=r(o(E),2);_(ee),i(E);var L=r(E,2),W=o(L),H=r(o(W),2),te=o(H);i(H),i(W);var ae=r(W,2);_(ae),i(L);var G=r(L,2),J=r(o(G),2);_(J),i(G);var N=r(G,2),Z=r(o(N),2);_(Z),i(N);var K=r(N,2),le=o(K,!0);i(K),i(I);var O=r(I,2),oe=o(O);Se(oe,t=>s(a,t),()=>e(a)),i(O),i(X),we(2),i(j),he(()=>{R(me,e(b)),k.disabled=e(h),R(te,`${e(g)??""} t`),Te(K,1,`mt-4 ${e(h)?"bg-red-500":"bg-blue-500"} text-white font-bold py-3 px-6 rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:scale-105`),R(le,e(u)?e(h)?"Stop":"Continue":"Start")}),y(k,()=>e(b),t=>s(b,t)),se("change",k,()=>{s(u,!1)}),y(D,()=>e(f),t=>s(f,t)),y(ee,()=>e(x),t=>s(x,t)),y(ae,()=>e(g),t=>s(g,t)),y(J,()=>e(S),t=>s(S,t)),ke(Z,()=>e(m),t=>s(m,t)),se("click",K,ue),pe(U,j),ye()}var qe=ve('<div class="flex flex-col lg:flex-col flex-grow gap-6"><div class="flex flex-col lg:flex-row flex-grow gap-6"><div class="lg:w-1/3 p-6 rounded-lg shadow-md flex flex-col space-y-4"><div class="flex flex-col space-y-2"><div class="flex flex-row justify-between"><label for="rd_speed" class="text-subtext0 font-medium">Number of Agents</label> <label for="rd_speed" class="text-subtext0 font-medium"> </label></div> <input type="range" id="rd_num_agents" min="2" max="100" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><div class="flex flex-row justify-between"><label for="rd_speed" class="text-subtext0 font-medium">Minimum Speed</label> <label for="rd_speed" class="text-subtext0 font-medium"> </label></div> <input type="range" id="rd_speed" min="1" max="10" step="0.1" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><div class="flex flex-row justify-between"><label for="rd_speed" class="text-subtext0 font-medium">Maximum Speed</label> <label for="rd_speed" class="text-subtext0 font-medium"> </label></div> <input type="range" id="rd_speed" min="1" max="10" step="0.1" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><div class="flex flex-row justify-between"><label for="rd_speed" class="text-subtext0 font-medium">Movement Time</label> <label for="rd_speed" class="text-subtext0 font-medium"> </label></div> <input type="range" id="rd_speed" min="1" max="100" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_speed" class="text-subtext0 font-medium">Range</label> <input type="range" id="rd_radius" min="1" max="1000" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <div class="flex flex-col space-y-2"><label for="rd_speed" class="text-subtext0 font-medium">Trace</label> <input type="checkbox" id="rd_trace" class="p-3 border border-overlay1 rounded-md focus:outline-none focus:ring-2 focus:ring-blue"/></div> <button> </button></div> <div class="lg:w-2/3 p-6 rounded-lg shadow-md flex flex-col"><canvas id="myCanvas" class="w-full h-[500px] border border-overlay1 rounded-md"></canvas></div></div> <br/></div>');function ze(U,P){_e(P,!1);let a=c(null),b=null,f=c(!1),x=c(!1),g=c(!1),S=[],w=c(V),h=c(20),u=c(5),m=c(8),M=c(50),F=c(50);function B(){if(e(a)){const l=e(a).getBoundingClientRect();ne(a,e(a).width=l.width),ne(a,e(a).height=l.height)}}function de(l){if(!e(a))return;const d=e(a).getContext("2d");if(d){d.strokeStyle="#14b8a6",d.lineWidth=2,console.log(l.length),console.log(S.length);for(let T=0;T<l.length;T++){const C=S[T],Q=l[T];!C||!Q||(d.beginPath(),d.moveTo(C.x,C.y),d.lineTo(Q.x,Q.y),d.stroke())}S=l}}function V(l){if(!e(a))return;const d=e(a).getContext("2d");d&&(d.clearRect(0,0,e(a).width,e(a).height),fe(d,l[0],l),ce(d,l))}function ce(l,d){l.fillStyle="#000000";for(const T of d)l.beginPath(),l.arc(T.x,T.y,8,0,Math.PI*2),l.fill()}function fe(l,d,T){l.fillStyle="#0000000F",l.strokeStyle="#FFFFFF00",l.beginPath(),l.arc(d.x,d.y,e(M),0,Math.PI*2),l.fill(),l.stroke(),l.strokeStyle="#FFFFFFFF";for(const C of T){let Q=d.x-C.x,be=d.y-C.y,xe=Math.sqrt(Q*Q+be*be);xe<e(M)&&xe!=0&&(l.moveTo(d.x,d.y),l.lineTo(C.x,C.y))}l.stroke()}async function ue(){if(!e(x)){if(!e(a))return;Pe(e(h),e(a).width,e(a).height,e(u),e(m),e(F)),s(x,!0)}if(s(f,!e(f)),e(f)){let l=function(){const d=je(e(a).width,e(a).height,e(u),e(m),e(F));e(w)(d),b=requestAnimationFrame(l)};b&&cancelAnimationFrame(b),l()}else b&&cancelAnimationFrame(b)}Fe(async()=>{await Ae(),B(),window.addEventListener("resize",B)}),re(()=>(e(u),e(m)),()=>{e(u)>e(m)&&s(m,e(u))}),re(()=>(e(a),e(g)),()=>{if(e(a)){const l=e(a).getContext("2d");l&&l.clearRect(0,0,e(a).width,e(a).height)}console.log(e(g)),e(g)?(console.log("TraceMode = Trace"),s(w,de)):(console.log("TraceMode = Draw"),s(w,V))}),ge(),Me();var j=qe(),X=o(j),I=o(X),$=o(I),q=o($),Y=r(o(q),2),me=o(Y,!0);i(Y),i(q);var k=r(q,2);_(k),i($);var z=r($,2),D=o(z),E=r(o(D),2),ee=o(E,!0);i(E),i(D);var L=r(D,2);_(L),i(z);var W=r(z,2),H=o(W),te=r(o(H),2),ae=o(te,!0);i(te),i(H);var G=r(H,2);_(G),i(W);var J=r(W,2),N=o(J),Z=r(o(N),2),K=o(Z,!0);i(Z),i(N);var le=r(N,2);_(le),i(J);var O=r(J,2),oe=r(o(O),2);_(oe),i(O);var t=r(O,2),n=r(o(t),2);_(n),i(t);var v=r(t,2),p=o(v,!0);i(v),i(I);var A=r(I,2),ie=o(A);Se(ie,l=>s(a,l),()=>e(a)),i(A),i(X),we(2),i(j),he(()=>{R(me,e(h)),k.disabled=e(f),R(ee,e(u)),R(ae,e(m)),R(K,e(F)),Te(v,1,`mt-4 ${e(f)?"bg-red-500":"bg-blue-500"} text-white font-bold py-3 px-6 rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:scale-105`),R(p,e(x)?e(f)?"Stop":"Continue":"Start")}),y(k,()=>e(h),l=>s(h,l)),se("change",k,()=>{s(x,!1)}),y(L,()=>e(u),l=>s(u,l)),y(G,()=>e(m),l=>s(m,l)),y(le,()=>e(F),l=>s(F,l)),y(oe,()=>e(M),l=>s(M,l)),ke(n,()=>e(g),l=>s(g,l)),se("click",v,ue),pe(U,j),ye()}var We=ve(`<div class="min-h-screen bg-base-500 p-4 flex flex-col space-y-10"><h1 class="text-4xl font-bold text-center text-text mb-8 rounded-lg p-4 shadow-md">MobilityModels</h1> <p>Mobility models are used in different scenarios. I learned about them in a course on mobile communication. They were used to model the behavior of mobile clients. With concrete movement, it's possible to simulate things like delay-tolerant routing protocols or handover management. <br/> This page shows two different, very simple mobility models to play with. <br/> For more information look at the original <a class="color-pink-500 dark:text-gray-400" href="https://www.researchgate.net/publication/2563707_A_Survey_of_Mobility_Models_for_Ad_Hoc_Network_Research">Paper</a>.</p> <br/> <h2 class="text-3xl font-semibold text-subtext1 mb-4">Random Walk</h2> <p>The random walk is one of the simpler models to simulate mobility.
    Its goal is to simulate random movement of the simulated nodes. <br/> The idea is that each node chooses a random direction from <b>[0, 360]</b> degrees and a random speed from <b>[speed_min, speed_max]</b>. Then each node moves for a fixed distance or, in this case, time. If the node hits a wall, it simply reflects."</p> <br/> <!> <h2 class="text-3xl font-semibold text-subtext1 mb-4">Random Direction</h2> <p>The random direction model is also a fairly simple mobility model. <br/> The first step is to choose a direction to head in. Then the node will move until it hits a wall. After a small pause at the wall, a new direction is chosen. A node can choose any direction as long as it's away from the wall."</p> <!></div>`);function Oe(U){var P=We(),a=r(o(P),12);ze(a,{});var b=r(a,6);$e(b,{}),i(P),pe(U,P)}export{Oe as component};
